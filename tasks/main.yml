---
# file: roles/common/tasks/main.yml

- name: find zookeepers
  become: yes
  become_user: '{{mapr_admin_username}}'
  command: maprcli node listzookeepers -noheader
  register: zookeepers
  changed_when: false

- name: find mapreduce1 version
  shell: rpm -qa --queryformat '%{VERSION} %{RELEASE}' mapr-mapreduce1 | awk '{ print substr($0,0,6) }'
  register: hadoop1_version
  changed_when: false

- name: find hadoop version
  shell: rpm -qa --queryformat '%{VERSION} %{RELEASE}' mapr-hadoop-core | awk '{ print substr($0,0,5) }'
  register: hadoop2_version
  changed_when: false

- name: install mysql51-libs if on AMZ Linux
  become: yes
  become_user: root
  yum: name={{item}} state=present
  with_items:
    - mysql51-libs
  when: ansible_distribution in ("Amazon")
  environment: proxy_env

- name: install mysql-libs on CentOS
  become: yes
  become_user: root
  yum: name={{item}} state=present
  with_items:
    - mysql-libs
  when: ansible_distribution in ("CentOS", "RedHat")
  environment: proxy_env

- name: install prereq packages for RH/CentOS
  become: yes
  become_user: root
  yum: name={{item}} state=present
  with_items:
    - MySQL-python
  when: ansible_distribution in ("RedHat", "CentOS", "Amazon")
  environment: proxy_env

- name: Install hue and hbase-thrift gateway
  become: yes
  become_user: root
  yum: pkg={{ item }} state=present
  with_items:
    - mapr-hue-{{hue_version}}.{{hue_build}}
    - mapr-hue-livy-{{hue_version}}.{{hue_build}}
    - mapr-hbasethrift-{{hbase_version}}.{{hbase_build}}
  when: ansible_distribution in ('CentOS', 'RedHat', 'Amazon')
  notify: reconfigure roles
  environment: proxy_env

- name: ensure hue database exists
  mysql_db:
    name="{{hue_db}}"
    state=present
    login_user="{{mysql_root_user}}"
    login_password="{{mysql_root_password}}"
    login_host="{{hue_db_host}}"
  register: createdb

- name: create hue user@%
  mysql_user:
    name={{hue_db_user}}
    host={{item}}
    password={{hue_db_pass}}
    check_implicit_admin=yes
    priv={{hue_db}}.*:ALL
    login_user="{{mysql_root_user}}"
    login_password="{{mysql_root_password}}"
    login_host="{{hue_db_host}}"
  with_items:
    - "localhost"
    - "{{ansible_default_ipv4.address}}"
    - "{{ansible_hostname}}"
    - "{{ansible_fqdn}}"

#- name: configure HBase to MapR DB table mapping 
#  hadoop_properties: name=hbase.table.namespace.mappings value="*:/tables" file=/opt/mapr/hadoop/hadoop-{{hadoop2_version.stdout}}/etc/hadoop/core-site.xml state=present

- name: generate hue_secret_key from /dev/urandom
  shell: dd if=/dev/urandom count=1024 | sha512sum | awk '{ print $1}'
  register: hue_secret_key

- name: install hue.ini
  template: src=hue.ini.j2 dest=/opt/mapr/hue/hue-{{hue_version}}/desktop/conf/hue.ini backup=yes owner=root group=root
  become: yes
  become_user: root

- name: run hue syncdb to populate MySQL tables
  become: yes
  become_user: '{{mapr_admin_username}}'
  command: /opt/mapr/hue/hue-{{hue_version}}/build/env/bin/python /opt/mapr/hue/hue-{{hue_version}}/build/env/bin/hue syncdb --noinput

- name: run hue migrate to populate MySQL tables
  become: yes
  become_user: '{{mapr_admin_username}}'
  command: /opt/mapr/hue/hue-{{hue_version}}/build/env/bin/python /opt/mapr/hue/hue-{{hue_version}}/build/env/bin/hue migrate

- name: update hue.sh with HUE_HOME
  become: yes
  become_user: root
  lineinfile: dest=/opt/mapr/hue/hue-{{hue_version}}/bin/hue.sh regexp="export HUE_HOME=" line="export HUE_HOME=/opt/mapr/hue/hue-{{hue_version}}" insertafter="^\#\!" state=present
  notify: restart hue

- name: update hue.sh with HADOOP_CONF_DIR
  become: yes
  become_user: root
  lineinfile: dest=/opt/mapr/hue/hue-{{hue_version}}/bin/hue.sh regexp="export HADOOP_CONF_DIR=" line='export HADOOP_CONF_DIR="/opt/mapr/hadoop/hadoop-{{hadoop2_version.stdout}}/etc/hadoop"' insertafter="^\#\!" state=present
  notify: restart hue

- name: update spark section of hue.ini, livy_server_host
  become: yes
  become_user: root
  lineinfile: dest=/opt/mapr/hue/hue-{{hue_version}}/desktop/conf/hue.ini regexp="livy_server_host" line='	livy_server_host={{inventory_hostname}}'
  when: spark_enabled
  notify: restart hue

- name: update spark section of hue.ini, livy_server_session_kind
  become: yes
  become_user: root
  lineinfile: dest=/opt/mapr/hue/hue-{{hue_version}}/desktop/conf/hue.ini regexp="livy_server_session" line='	livy_server_session_kind=yarn'
  when: yarn_enabled and spark_enabled
  notify: restart hue

- name: update spark section of hue.ini, livy_impersonation_enabled
  become: yes
  become_user: root
  lineinfile: dest=/opt/mapr/hue/hue-{{hue_version}}/desktop/conf/hue.ini regexp="livy_impersonation_enabled" line='	livy_impersonation_enabled=true'
  when: spark_enabled
  notify: restart hue

- name: enable impersonation in Hue (hosts) (mr1)
  become: yes
  become_user: '{{mapr_admin_username}}'
  hadoop_properties:
    file: "/opt/mapr/hadoop/hadoop-{{hadoop1_version.stdout}}/conf/core-site.xml"
    name: 'hadoop.proxyuser.mapr.hosts'
    value: '*'
  notify: restart jobtracker
  when: classic_enabled

- name: enable impersonation in Hue (groups) (mr1)
  become: yes
  become_user: '{{mapr_admin_username}}'
  hadoop_properties:
    file: "/opt/mapr/hadoop/hadoop-{{hadoop1_version.stdout}}/conf/core-site.xml"
    name: 'hadoop.proxyuser.mapr.groups'
    value: '*'
  notify: restart jobtracker
  when: classic_enabled

- pause: seconds=15
