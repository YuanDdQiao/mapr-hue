---
# file: roles/common/tasks/main.yml

- name: find zookeepers
  sudo: yes
  sudo_user: '{{mapr_admin_username}}'
  command: maprcli node listzookeepers -noheader
  register: zookeepers

- name: find mapreduce1 version
  shell: rpm -qa --queryformat '%{VERSION} %{RELEASE}' mapr-mapreduce1 | awk '{ print substr($0,0,6) }'
  register: hadoop1_version
  changed_when: false

- name: find hadoop version
  shell: rpm -qa --queryformat '%{VERSION} %{RELEASE}' mapr-hadoop-core | awk '{ print substr($0,0,5) }'
  register: hadoop2_version
  changed_when: false

- name: install mysql51-libs if on AMZ Linux
  yum: name={{item}} state=present
  with_items:
    - mysql51-libs
  when: ansible_distribution in ("Amazon")
  environment: proxy_env

- name: install mysql-libs on CentOS
  yum: name={{item}} state=present
  with_items:
    - mysql-libs
  when: ansible_distribution in ("CentOS", "RedHat")
  environment: proxy_env

- name: install prereq packages for RH/CentOS
  yum: name={{item}} state=present
  with_items:
    - MySQL-python
  when: ansible_distribution in ("RedHat", "CentOS", "Amazon")
  environment: proxy_env

- name: Install hue and hbase-thrift gateway
  yum: pkg={{ item }} state=present
  with_items:
    - mapr-hue-{{hue_version}}.{{hue_build}}
    - mapr-hbasethrift
  when: ansible_distribution in ('CentOS', 'RedHat', 'Amazon')
  environment: proxy_env
  notify: reconfigure roles
  environment: proxy_env

- name: ensure hue database exists
  mysql_db:
    name="{{hue_db}}"
    state=present
    login_user="{{mysql_root_user}}"
    login_password="{{mysql_root_password}}"
    login_host="{{hue_db_host}}"
  register: createdb

#- name: create mapr user@localhost
#  mysql_user:
#    name={{hue_db_user}}
#    host="localhost"
#    password="{{hue_db_pass}}"
#    check_implicit_admin=yes
#    priv={{hue_db}}.*:ALL
#    login_user="{{mysql_root_user}}"
#    login_password="{{mysql_root_password}}"
#    login_host="{{hostvars[hive_metastore_host].ansible_hostname}}"
#  with_items:
#    - "{{ansible_default_ipv4.address}}"
#    - "{{ansible_hostname}}"
#    - "%"

- name: create hue user@%
  mysql_user:
    name={{hue_db_user}}
    host={{item}}
    password={{hue_db_pass}}
    check_implicit_admin=yes
    priv={{hue_db}}.*:ALL
    login_user="{{mysql_root_user}}"
    login_password="{{mysql_root_password}}"
    login_host="{{hue_db_host}}"
  with_items:
    - "localhost"
    - "{{ansible_default_ipv4.address}}"
    - "{{ansible_hostname}}"
    - "{{ansible_fqdn}}"

- name: configure HBase to MapR DB table mapping 
  hadoop_properties: name=hbase.table.namespace.mappings value="*:/tables" file=/opt/mapr/hadoop/hadoop-{{hadoop2_version.stdout}}/etc/hadoop/core-site.xml

- name: generate hue_secret_key from /dev/urandom
  shell: dd if=/dev/urandom count=1024 | sha512sum | awk '{ print $1}'
  register: hue_secret_key

- name: install hue.ini
  template: src=hue.ini-3.8.1.j2 dest=/opt/mapr/hue/hue-{{hue_version}}/desktop/conf/hue.ini mode=0644 owner=mapr group=mapr backup=yes
  notify: restart hue

- name: run hue syncdb to populate MySQL tables
  command: /opt/mapr/hue/hue-{{hue_version}}/build/env/bin/hue syncdb --noinput
  when: createdb|changed
  register: syncdb

- name: run hue migrate to populate MySQL tables
  command: /opt/mapr/hue/hue-{{hue_version}}/build/env/bin/hue migrate
  when: syncdb|changed

#- name: fetch the hue plugins
#  sudo: no
#  fetch: src=/opt/mapr/hue/hue-{{hue_version}}/desktop/libs/hadoop/java-lib/hue-plugins-3.6.0-mapr.jar dest=/tmp flat=true validate_md5=false
#  register: fetch

#- name: Install Hue plugins to Jobtrackers
#  shell: cp /opt/mapr/hue/{{hue_version.stdout}}/desktop/libs/hadoop/java-lib/hue-plugins-*.jar {{mapr_hadoop1_path}}/lib/

#- name: configure jobtracker (mr1) thrift address
#  hadoop_properties:
#    file: "/opt/mapr/hadoop/hadoop-{{hadoop1_version.stdout}}/conf/mapred-site.xml"
#    name: 'jobtracker.thrift.address'
#    value: '0.0.0.0:9290'
#  notify: restart jobtracker

#- name: configure jobtracker (mr2) thrift address
#  hadoop_properties:
#    file: "/opt/mapr/hadoop/hadoop-{{hadoop1_version.stdout}}/conf/mapred-site.xml"
#    name: 'jobtracker.thrift.address'
#    value: '0.0.0.0:9290'

#- name: configure jobtracker plugins (mr1)
#  hadoop_properties:
#    file: "/opt/mapr/hadoop/hadoop-{{hadoop1_version.stdout}}/conf/mapred-site.xml"
#    name: 'mapred.jobtracker.plugins'
#    value: 'org.apache.hadoop.thriftfs.ThriftJobTrackerPlugin'
#  notify: restart jobtracker
      
#- name: configure jobtracker plugins (mr2)
#  hadoop_properties:
#    file: "/opt/mapr/hadoop/hadoop-{{hadoop2_version.stdout}}/etc/hadoop/mapred-site.xml"
#    name: 'mapred.jobtracker.plugins'
#    value: 'org.apache.hadoop.thriftfs.ThriftJobTrackerPlugin'

- name: enable impersonation in Hue (hosts) (mr1)
  hadoop_properties:
    file: "/opt/mapr/hadoop/hadoop-{{hadoop1_version.stdout}}/conf/core-site.xml"
    name: 'hadoop.proxyuser.mapr.hosts'
    value: '*'
  notify: restart jobtracker

- name: enable impersonation in Hue (groups) (mr1)
  hadoop_properties:
    file: "/opt/mapr/hadoop/hadoop-{{hadoop1_version.stdout}}/conf/core-site.xml"
    name: 'hadoop.proxyuser.mapr.groups'
    value: '*'
  notify: restart jobtracker

#- name: enable impersonation in Hue (hosts) (mr2)
#  hadoop_properties:
#    file: "/opt/mapr/hadoop/hadoop-{{hadoop2_version.stdout}}/etc/hadoop/core-site.xml"
#    name: 'hadoop.proxyuser.mapr.hosts'
#    value: '*'

#- name: enable impersonation in Hue (groups) (mr2)
#  hadoop_properties:
#    file: "/opt/mapr/hadoop/hadoop-{{hadoop2_version.stdout}}/etc/hadoop/core-site.xml"
#    name: 'hadoop.proxyuser.mapr.groups'
#    value: '*'
